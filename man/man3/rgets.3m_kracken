." Text automatically generated by txt2man
.TH "rgets" "3m_kracken" "April 14, 2023" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." set smaller margin and spacing options
.ta T 0.2i
.nr IN 0.2i
." -----------------------------------------------------------------
.SH NAME
rgets(3f) - [ARGUMENTS:M_kracken] given keyword fetch real array from command arguments
(LICENSE:PD)

.SH SYNOPSIS
function rgets(keyword,ier) result(rarray)
.PP
.nf
.fam C
    character(len=*),intent(in)   :: keyword
    real,allocatable              :: rarray(:)
    integer,optional,intent(iout) :: ier

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
The rgets(3f) function returns a dynamically allocated array of real values
from a string that is the value for a command line option. It is part of
the M_kracken(3fm) module.
.PP
Values that cannot be read as a numeric value are returned as a NaN.
.SH OPTIONS
.TP
.B KEYWORD
the dictionary keyword (in form VERB_KEYWORD) to retrieve.
The VERB name comes from the first argument of the KRACKEN(3f)
call. The KEYWORD is a keyword from the KRACKEN(3f) call that
should be interpreted as a list of REAL values.
.SH RETURNS
.TP
.B RARRAY
real array returned by function.
The array will have zero size if the parsed dictionary
entry is blank.
.TP
.B IER
If present and non-zero an error occurred in converting strings to a value
.SH EXAMPLE
Sample program converts between Celcius and Fahrenheit
.PP
.nf
.fam C
   program demo_rgets
   use M_kracken, only: kracken, rgets
   implicit none
   real,allocatable  :: val(:)
   integer :: i
     ! define command arguments and parse user command
     call kracken('fc','-F -C' )

     ! get any values specified on -C option
     val=rgets('fc_C')
     ! test if have something to print in C ==> F table
     if(size(val).gt.0)then
        ! print the requested values
        write(*,'(a,t14,a)')'celsius','fahrenheit'
        write(*,'(f5.1,t14,f5.1)')( val(i),(val(i)+40.0)*9.0/5.0 - 40.0,i=1,size(val))
     endif

     val=rgets('fc_F')
     ! check for values on -F
     if(size(val).gt.0)then
        write(*,'(a,t14,a)') 'fahrenheit', 'celsius'
        write(*,'(f5.1,t14,f5.1)')(val(i),(val(i)+40.0)*5.0/9.0 - 40.0,i=1,size(val))
     endif
   end program demo_rgets

.fam T
.fi
Example program runs:
.PP
.nf
.fam C
   % demo_rgets -C -273.15 0 100 -40 37
   celsius      fahrenheit
    -273.15      -459.67
       0.0         32.0
     100.0        212.0
     -40.0        -40.0
      37.0         98.6

   % demo_rgets -F -459.67 32 212 -40 98.6
   fahrenheit   celsius
    -459.67      -273.15
      32.00         0.00
     212.00       100.00
     -40.00       -40.00
      98.60        37.00

.fam T
.fi
.SH SEE ALSO
.TP
.B M_kracken(3f),
kracken(3f)
.PP
dget(3f), dgets(3f), iget(3f), igets(3f), lget(3f), lgets(3f),
rget(3f), rgets(3f), sget(3f), sgets(3f), retrev(3f)
.PP
parse(3f), dissect(3f), store(3f), setprompts(3f), show(3f)
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
