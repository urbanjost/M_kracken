." Text automatically generated by txt2man
.TH "parse" "3m_kracken" "February 12, 2023" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." set smaller margin and spacing options
.ta T 0.2i
.nr IN 0.2i
." -----------------------------------------------------------------
.SH NAME
parse(3f) - [ARGUMENTS:M_kracken] parse user command and store tokens into Language Dictionary
(LICENSE:PD)

.SH SYNOPSIS
recursive subroutine parse(verb,string,allow,error_return)
.PP
.nf
.fam C
   character(len=*),intent(in)     ::  verb
   character(len=*),intent(in)     ::  string
   character(len=*),intent(in)     ::  allow
   integer,optional,intent(out)    ::  error_return

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
given a string of form
.PP
.nf
.fam C
     value  -var value -var value

.fam T
.fi
define variables of form
.PP
.nf
.fam C
     verb_var(i) = value

.fam T
.fi
\fB--var\fP will become verb__var
.IP \(bu 3
values may be in double quotes if they contain alphameric characters
.IP \(bu 3
a # signifies the rest of the line is a comment
.IP \(bu 3
adjacent double quotes put one double quote into value
.IP \(bu 3
processing ends when an unquoted semi-colon or end of string is encountered
.IP \(bu 3
the variable name for the first value is verb_init (often verb_oo)
.IP \(bu 3
leading and trailing blanks are removed from values
.IP \(bu 3
call it once to give defaults
.IP \(bu 3
call it again and vars without values are set to null strings
.SH OPTIONS

.TP
.B VERB
command name to process
.TP
.B STRING
string is character input string with first verb removed (options + other commands)
.TP
.B ALLOW
flag to allow or disallow new VERB_KEYWORD name being added. Should be
.SS             NEW VARIABLES ARE ALLOWED
.IP \(bu 3
'define' - add or replace a new VERB_KEYWORD entry and value
.IP \(bu 3
'add' - add or append to a new VERB_KEYWORD entry and value
.SS             NO NEW VARIABLES ARE ALLOWED
.IP \(bu 3
'append' or 'no_add' - append to an *EXISTING* entry value
.IP \(bu 3
'replace' - replace an *EXISTING* entry
.RE
.PP
That is, ff 'add' or 'append' and the value is not blank
it will be APPENDED to the current value. If 'define' or
'replace' it will replace the value instead of appending
to it.
.SH RETURNS
.TP
.B ERROR_RETURN
error code. If zero, no error occurred
.SH EXAMPLE
sample program:
.PP
.nf
.fam C
   program demo_parse
   use M_kracken, only : parse, sget, iget, rget
   use M_strings, only : chomp
   implicit none
   character(len=:),allocatable  :: verb
   character(len=*),parameter    :: delimiters=' ;,'
   integer     :: i
   integer     :: ierr
   character(len=132) :: line
   character(len=132), parameter :: commands(5)= [character(len=132) :: &
     'start -i 10 -message this is a message', &
     'end -i 20 -j 30 -k 55.55 ', &
     'list', &
     'help -oo', &
     'end -i 44.44 ']
     do i=1,size(commands)
        line=commands(i) ! need mutable line
        if(chomp(line,verb,delimiters).ge. 0)then
           call parse(verb,line,'add',ierr)
           write(*,*)'do whatever a '//verb//' command does'
           select case(verb)
           case('start')
              write(*,*)trim(sget('start_i'))
              write(*,*)trim(sget('start_message'))
           case('end')
              write(*,*)iget('end_i')
              write(*,*)iget('end_j')
              write(*,*)rget('end_k')
           case('list')
              write(*,*)'list things'
           case('help')
              write(*,*)'show help text'
           endselect
        endif
     enddo
     ! look at some of the values as strings or numbers
     write(*,*)trim(sget('start_i'))
     write(*,*)trim(sget('start_message'))
     write(*,*)iget('end_i')
     write(*,*)iget('end_j')
     write(*,*)rget('end_k')
   end program demo_parse

.fam T
.fi
Results:
.PP
.nf
.fam C
    do whatever a start command does
    10
    this is a message
    do whatever a end command does
             20
             30
      55.5499992
    do whatever a list command does
    list things
    do whatever a help command does
    show help text
    do whatever a end command does
             44
             30
      55.5499992
    10
    this is a message
             44
             30
      55.5499992

.fam T
.fi
.SH SEE ALSO
.TP
.B M_kracken(3f),
kracken(3f)
.PP
dget(3f), dgets(3f), iget(3f), igets(3f), lget(3f), lgets(3f),
rget(3f), rgets(3f), sget(3f), sgets(3f), retrev(3f)
.PP
parse(3f), dissect(3f), store(3f), setprompts(3f), show(3f)
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
